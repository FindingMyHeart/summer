server.port=8085

#--------------------------------server config begin--------------------------------#
#socket端口
serverConfig.serverType=LOGIN
serverConfig.port=8002
serverConfig.serverId =0
serverConfig.isCenter = 1
#是否发送rpc
serverConfig.isSendRPC = 1
#游戏rpc服务端口
serverConfig.gameRpcServerPort = 9090
#管理平台rpc的ip 和 端口
serverConfig.adminRpcHost = 192.168.1.150
serverConfig.adminRpcPort = 9999


#--------------------------------pay begin--------------------------------#
#应用id
serverConfig.appId = wxad87bc7722faff71
#商户号
serverConfig.mchId = 1458783202
#API秘钥
serverConfig.key = Iiarg081390357682513935781706ldd
#回调地址
serverConfig.notifyUrl = http://101.201.209.77:8085/callback


#--------------------------------mysql begin--------------------------------#
spring.datasource.url = jdbc:mysql://localhost:3306/summer?autoReconnect=true
spring.datasource.username = root
spring.datasource.password = root
spring.datasource.driverClassName = com.mysql.jdbc.Driver
# Specify the DBMS
spring.jpa.database = MYSQL
# Show or not log for each sql query
spring.jpa.show-sql = true
# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update
# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# stripped before adding them to the entity manager)
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

#--------------------------------endpoints begin--------------------------------#
endpoints.beans.id=springbeans
endpoints.beans.sensitive=false
endpoints.shutdown.enabled=false
management.security.enabled = false

#--------------------------------kafka begin--------------------------------#
#kafka
# 指定kafka 代理地址，可以多个
spring.kafka.bootstrap-servers=localhost:9092
#spring.kafka.bootstrap-servers=106.75.4.29:9092,192.168.59.131:9092,192.168.59.132:9092
# 指定默认topic id
#spring.kafka.template.default-topic= test
# 指定默认消费者group id
spring.kafka.consumer.group-id=userServiceGroup
#spring.kafka.consumer.auto-offset-reset=earliest
#spring.kafka.consumer.max-poll-records=100
spring.kafka.consumer.enable-auto-commit=true
#spring.kafka.listener.ack-count= 1
#spring.kafka.listener.ack-mode= COUNT
#spring.kafka.listener.ack-mode=MANUAL_IMMEDIATE
#spring.kafka.listener.ack-mode=MANUAL
# 指定listener 容器中的线程数，用于提高并发量
#spring.kafka.listener.concurrency= 1
#spring.kafka.listener.poll-timeout= 200
# 每次批量发送消息的数量

#spring.kafka.producer.batch-size= 1000
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer


#--------------------------------redis begin--------------------------------#

# REDIS (RedisProperties)
#spring.redis.cluster.max-redirects= # Maximum number of redirects to follow when executing commands across the cluster.
#spring.redis.cluster.nodes= # Comma-separated list of "host:port" pairs to bootstrap from.
spring.redis.database=0
#spring.redis.url= # Connection URL, will override host, port and password (user will be ignored), e.g. redis://user:password@example.com:6379
spring.redis.host=localhost
#spring.redis.password=
spring.redis.ssl=false
spring.redis.pool.max-active=8
spring.redis.pool.max-idle=8
spring.redis.pool.max-wait=-1
spring.redis.pool.min-idle=0
spring.redis.port=6379
#spring.redis.sentinel.master= # Name of Redis server.
#spring.redis.sentinel.nodes= # Comma-separated list of host:port pairs.
spring.redis.timeout=0


