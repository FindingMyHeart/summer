#socket端口
serverConfig.port=8003
serverConfig.serverId = 0
#保存时间
serverConfig.dbSaveTime = 300000
#剔除时间
serverConfig.kickTime = 300000
#是否开启rpc服务
serverConfig.isStartRPC = 1
#是否发送rpc
serverConfig.isSendRPC = 1
#游戏rpc服务端口
serverConfig.gameRpcServerPort = 9090
#管理平台rpc的ip 和 端口
serverConfig.adminRpcHost = 192.168.1.150
serverConfig.adminRpcPort = 10000
#机器人执行周期
serverConfig.robotExeCycle = 1000
serverConfig.isStartRobot = 1




#--------------------------------kafka start--------------------------------#
#kafka
# 指定kafka 代理地址，可以多个
spring.kafka.bootstrap-servers=localhost:9092
#spring.kafka.bootstrap-servers=106.75.4.29:9092,192.168.59.131:9092,192.168.59.132:9092
# 指定默认topic id
spring.kafka.template.default-topic= test
# 指定默认消费者group id
spring.kafka.consumer.group-id=myGroup
#spring.kafka.consumer.auto-offset-reset=earliest
#spring.kafka.consumer.max-poll-records=100
#spring.kafka.consumer.enable-auto-commit=true

# 指定listener 容器中的线程数，用于提高并发量
#spring.kafka.listener.concurrency= 1
#spring.kafka.listener.poll-timeout= 300000000
# 每次批量发送消息的数量

#spring.kafka.listener.ack-count=1

#spring.kafka.producer.batch-size= 1000
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer