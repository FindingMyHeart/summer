// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: static_data_proto.proto

package com.code.server.constant.data;

public final class StaticDataProto {
  private StaticDataProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface DataManagerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:DataManager)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>map&lt;int32, .Room&gt; Room_record = 1;</code>
     */
    int getRoomRecordCount();
    /**
     * <code>map&lt;int32, .Room&gt; Room_record = 1;</code>
     */
    boolean containsRoomRecord(
        int key);
    /**
     * Use {@link #getRoomRecordMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, com.code.server.constant.data.StaticDataProto.Room>
    getRoomRecord();
    /**
     * <code>map&lt;int32, .Room&gt; Room_record = 1;</code>
     */
    java.util.Map<java.lang.Integer, com.code.server.constant.data.StaticDataProto.Room>
    getRoomRecordMap();
    /**
     * <code>map&lt;int32, .Room&gt; Room_record = 1;</code>
     */

    com.code.server.constant.data.StaticDataProto.Room getRoomRecordOrDefault(
        int key,
        com.code.server.constant.data.StaticDataProto.Room defaultValue);
    /**
     * <code>map&lt;int32, .Room&gt; Room_record = 1;</code>
     */

    com.code.server.constant.data.StaticDataProto.Room getRoomRecordOrThrow(
        int key);
  }
  /**
   * Protobuf type {@code DataManager}
   */
  public  static final class DataManager extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:DataManager)
      DataManagerOrBuilder {
    // Use DataManager.newBuilder() to construct.
    private DataManager(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DataManager() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private DataManager(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                roomRecord_ = com.google.protobuf.MapField.newMapField(
                    RoomRecordDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, com.code.server.constant.data.StaticDataProto.Room>
              roomRecord__ = input.readMessage(
                  RoomRecordDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              roomRecord_.getMutableMap().put(
                  roomRecord__.getKey(), roomRecord__.getValue());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.code.server.constant.data.StaticDataProto.internal_static_DataManager_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetRoomRecord();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.code.server.constant.data.StaticDataProto.internal_static_DataManager_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.code.server.constant.data.StaticDataProto.DataManager.class, com.code.server.constant.data.StaticDataProto.DataManager.Builder.class);
    }

    public static final int ROOM_RECORD_FIELD_NUMBER = 1;
    private static final class RoomRecordDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, com.code.server.constant.data.StaticDataProto.Room> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, com.code.server.constant.data.StaticDataProto.Room>newDefaultInstance(
                  com.code.server.constant.data.StaticDataProto.internal_static_DataManager_RoomRecordEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  com.code.server.constant.data.StaticDataProto.Room.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, com.code.server.constant.data.StaticDataProto.Room> roomRecord_;
    private com.google.protobuf.MapField<java.lang.Integer, com.code.server.constant.data.StaticDataProto.Room>
    internalGetRoomRecord() {
      if (roomRecord_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            RoomRecordDefaultEntryHolder.defaultEntry);
      }
      return roomRecord_;
    }

    public int getRoomRecordCount() {
      return internalGetRoomRecord().getMap().size();
    }
    /**
     * <code>map&lt;int32, .Room&gt; Room_record = 1;</code>
     */

    public boolean containsRoomRecord(
        int key) {
      
      return internalGetRoomRecord().getMap().containsKey(key);
    }
    /**
     * Use {@link #getRoomRecordMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, com.code.server.constant.data.StaticDataProto.Room> getRoomRecord() {
      return getRoomRecordMap();
    }
    /**
     * <code>map&lt;int32, .Room&gt; Room_record = 1;</code>
     */

    public java.util.Map<java.lang.Integer, com.code.server.constant.data.StaticDataProto.Room> getRoomRecordMap() {
      return internalGetRoomRecord().getMap();
    }
    /**
     * <code>map&lt;int32, .Room&gt; Room_record = 1;</code>
     */

    public com.code.server.constant.data.StaticDataProto.Room getRoomRecordOrDefault(
        int key,
        com.code.server.constant.data.StaticDataProto.Room defaultValue) {
      
      java.util.Map<java.lang.Integer, com.code.server.constant.data.StaticDataProto.Room> map =
          internalGetRoomRecord().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, .Room&gt; Room_record = 1;</code>
     */

    public com.code.server.constant.data.StaticDataProto.Room getRoomRecordOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, com.code.server.constant.data.StaticDataProto.Room> map =
          internalGetRoomRecord().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetRoomRecord(),
          RoomRecordDefaultEntryHolder.defaultEntry,
          1);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<java.lang.Integer, com.code.server.constant.data.StaticDataProto.Room> entry
           : internalGetRoomRecord().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, com.code.server.constant.data.StaticDataProto.Room>
        roomRecord__ = RoomRecordDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, roomRecord__);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.code.server.constant.data.StaticDataProto.DataManager)) {
        return super.equals(obj);
      }
      com.code.server.constant.data.StaticDataProto.DataManager other = (com.code.server.constant.data.StaticDataProto.DataManager) obj;

      boolean result = true;
      result = result && internalGetRoomRecord().equals(
          other.internalGetRoomRecord());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (!internalGetRoomRecord().getMap().isEmpty()) {
        hash = (37 * hash) + ROOM_RECORD_FIELD_NUMBER;
        hash = (53 * hash) + internalGetRoomRecord().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.code.server.constant.data.StaticDataProto.DataManager parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.code.server.constant.data.StaticDataProto.DataManager parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.code.server.constant.data.StaticDataProto.DataManager parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.code.server.constant.data.StaticDataProto.DataManager parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.code.server.constant.data.StaticDataProto.DataManager parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.code.server.constant.data.StaticDataProto.DataManager parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.code.server.constant.data.StaticDataProto.DataManager parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.code.server.constant.data.StaticDataProto.DataManager parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.code.server.constant.data.StaticDataProto.DataManager parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.code.server.constant.data.StaticDataProto.DataManager parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.code.server.constant.data.StaticDataProto.DataManager prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code DataManager}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:DataManager)
        com.code.server.constant.data.StaticDataProto.DataManagerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.code.server.constant.data.StaticDataProto.internal_static_DataManager_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetRoomRecord();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetMutableRoomRecord();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.code.server.constant.data.StaticDataProto.internal_static_DataManager_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.code.server.constant.data.StaticDataProto.DataManager.class, com.code.server.constant.data.StaticDataProto.DataManager.Builder.class);
      }

      // Construct using com.code.server.constant.data.StaticDataProto.DataManager.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        internalGetMutableRoomRecord().clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.code.server.constant.data.StaticDataProto.internal_static_DataManager_descriptor;
      }

      public com.code.server.constant.data.StaticDataProto.DataManager getDefaultInstanceForType() {
        return com.code.server.constant.data.StaticDataProto.DataManager.getDefaultInstance();
      }

      public com.code.server.constant.data.StaticDataProto.DataManager build() {
        com.code.server.constant.data.StaticDataProto.DataManager result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.code.server.constant.data.StaticDataProto.DataManager buildPartial() {
        com.code.server.constant.data.StaticDataProto.DataManager result = new com.code.server.constant.data.StaticDataProto.DataManager(this);
        int from_bitField0_ = bitField0_;
        result.roomRecord_ = internalGetRoomRecord();
        result.roomRecord_.makeImmutable();
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.code.server.constant.data.StaticDataProto.DataManager) {
          return mergeFrom((com.code.server.constant.data.StaticDataProto.DataManager)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.code.server.constant.data.StaticDataProto.DataManager other) {
        if (other == com.code.server.constant.data.StaticDataProto.DataManager.getDefaultInstance()) return this;
        internalGetMutableRoomRecord().mergeFrom(
            other.internalGetRoomRecord());
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.code.server.constant.data.StaticDataProto.DataManager parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.code.server.constant.data.StaticDataProto.DataManager) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.MapField<
          java.lang.Integer, com.code.server.constant.data.StaticDataProto.Room> roomRecord_;
      private com.google.protobuf.MapField<java.lang.Integer, com.code.server.constant.data.StaticDataProto.Room>
      internalGetRoomRecord() {
        if (roomRecord_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              RoomRecordDefaultEntryHolder.defaultEntry);
        }
        return roomRecord_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, com.code.server.constant.data.StaticDataProto.Room>
      internalGetMutableRoomRecord() {
        onChanged();;
        if (roomRecord_ == null) {
          roomRecord_ = com.google.protobuf.MapField.newMapField(
              RoomRecordDefaultEntryHolder.defaultEntry);
        }
        if (!roomRecord_.isMutable()) {
          roomRecord_ = roomRecord_.copy();
        }
        return roomRecord_;
      }

      public int getRoomRecordCount() {
        return internalGetRoomRecord().getMap().size();
      }
      /**
       * <code>map&lt;int32, .Room&gt; Room_record = 1;</code>
       */

      public boolean containsRoomRecord(
          int key) {
        
        return internalGetRoomRecord().getMap().containsKey(key);
      }
      /**
       * Use {@link #getRoomRecordMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, com.code.server.constant.data.StaticDataProto.Room> getRoomRecord() {
        return getRoomRecordMap();
      }
      /**
       * <code>map&lt;int32, .Room&gt; Room_record = 1;</code>
       */

      public java.util.Map<java.lang.Integer, com.code.server.constant.data.StaticDataProto.Room> getRoomRecordMap() {
        return internalGetRoomRecord().getMap();
      }
      /**
       * <code>map&lt;int32, .Room&gt; Room_record = 1;</code>
       */

      public com.code.server.constant.data.StaticDataProto.Room getRoomRecordOrDefault(
          int key,
          com.code.server.constant.data.StaticDataProto.Room defaultValue) {
        
        java.util.Map<java.lang.Integer, com.code.server.constant.data.StaticDataProto.Room> map =
            internalGetRoomRecord().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, .Room&gt; Room_record = 1;</code>
       */

      public com.code.server.constant.data.StaticDataProto.Room getRoomRecordOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, com.code.server.constant.data.StaticDataProto.Room> map =
            internalGetRoomRecord().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearRoomRecord() {
        internalGetMutableRoomRecord().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, .Room&gt; Room_record = 1;</code>
       */

      public Builder removeRoomRecord(
          int key) {
        
        internalGetMutableRoomRecord().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, com.code.server.constant.data.StaticDataProto.Room>
      getMutableRoomRecord() {
        return internalGetMutableRoomRecord().getMutableMap();
      }
      /**
       * <code>map&lt;int32, .Room&gt; Room_record = 1;</code>
       */
      public Builder putRoomRecord(
          int key,
          com.code.server.constant.data.StaticDataProto.Room value) {
        
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableRoomRecord().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, .Room&gt; Room_record = 1;</code>
       */

      public Builder putAllRoomRecord(
          java.util.Map<java.lang.Integer, com.code.server.constant.data.StaticDataProto.Room> values) {
        internalGetMutableRoomRecord().getMutableMap()
            .putAll(values);
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:DataManager)
    }

    // @@protoc_insertion_point(class_scope:DataManager)
    private static final com.code.server.constant.data.StaticDataProto.DataManager DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.code.server.constant.data.StaticDataProto.DataManager();
    }

    public static com.code.server.constant.data.StaticDataProto.DataManager getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DataManager>
        PARSER = new com.google.protobuf.AbstractParser<DataManager>() {
      public DataManager parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new DataManager(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DataManager> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DataManager> getParserForType() {
      return PARSER;
    }

    public com.code.server.constant.data.StaticDataProto.DataManager getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RoomOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Room)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string id = 1;</code>
     */
    java.lang.String getId();
    /**
     * <code>string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <code>map&lt;int32, int32&gt; money = 2;</code>
     */
    int getMoneyCount();
    /**
     * <code>map&lt;int32, int32&gt; money = 2;</code>
     */
    boolean containsMoney(
        int key);
    /**
     * Use {@link #getMoneyMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getMoney();
    /**
     * <code>map&lt;int32, int32&gt; money = 2;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getMoneyMap();
    /**
     * <code>map&lt;int32, int32&gt; money = 2;</code>
     */

    int getMoneyOrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;int32, int32&gt; money = 2;</code>
     */

    int getMoneyOrThrow(
        int key);

    /**
     * <code>map&lt;int32, int32&gt; eachMoney = 3;</code>
     */
    int getEachMoneyCount();
    /**
     * <code>map&lt;int32, int32&gt; eachMoney = 3;</code>
     */
    boolean containsEachMoney(
        int key);
    /**
     * Use {@link #getEachMoneyMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getEachMoney();
    /**
     * <code>map&lt;int32, int32&gt; eachMoney = 3;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getEachMoneyMap();
    /**
     * <code>map&lt;int32, int32&gt; eachMoney = 3;</code>
     */

    int getEachMoneyOrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;int32, int32&gt; eachMoney = 3;</code>
     */

    int getEachMoneyOrThrow(
        int key);

    /**
     * <code>int32 isAddGold = 4;</code>
     */
    int getIsAddGold();

    /**
     * <code>string desc = 5;</code>
     */
    java.lang.String getDesc();
    /**
     * <code>string desc = 5;</code>
     */
    com.google.protobuf.ByteString
        getDescBytes();
  }
  /**
   * Protobuf type {@code Room}
   */
  public  static final class Room extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Room)
      RoomOrBuilder {
    // Use Room.newBuilder() to construct.
    private Room(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Room() {
      id_ = "";
      isAddGold_ = 0;
      desc_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Room(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                money_ = com.google.protobuf.MapField.newMapField(
                    MoneyDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000002;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              money__ = input.readMessage(
                  MoneyDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              money_.getMutableMap().put(
                  money__.getKey(), money__.getValue());
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                eachMoney_ = com.google.protobuf.MapField.newMapField(
                    EachMoneyDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000004;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              eachMoney__ = input.readMessage(
                  EachMoneyDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              eachMoney_.getMutableMap().put(
                  eachMoney__.getKey(), eachMoney__.getValue());
              break;
            }
            case 32: {

              isAddGold_ = input.readInt32();
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              desc_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.code.server.constant.data.StaticDataProto.internal_static_Room_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 2:
          return internalGetMoney();
        case 3:
          return internalGetEachMoney();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.code.server.constant.data.StaticDataProto.internal_static_Room_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.code.server.constant.data.StaticDataProto.Room.class, com.code.server.constant.data.StaticDataProto.Room.Builder.class);
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <code>string id = 1;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <code>string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MONEY_FIELD_NUMBER = 2;
    private static final class MoneyDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  com.code.server.constant.data.StaticDataProto.internal_static_Room_MoneyEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> money_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetMoney() {
      if (money_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MoneyDefaultEntryHolder.defaultEntry);
      }
      return money_;
    }

    public int getMoneyCount() {
      return internalGetMoney().getMap().size();
    }
    /**
     * <code>map&lt;int32, int32&gt; money = 2;</code>
     */

    public boolean containsMoney(
        int key) {
      
      return internalGetMoney().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMoneyMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getMoney() {
      return getMoneyMap();
    }
    /**
     * <code>map&lt;int32, int32&gt; money = 2;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.Integer> getMoneyMap() {
      return internalGetMoney().getMap();
    }
    /**
     * <code>map&lt;int32, int32&gt; money = 2;</code>
     */

    public int getMoneyOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetMoney().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, int32&gt; money = 2;</code>
     */

    public int getMoneyOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetMoney().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int EACHMONEY_FIELD_NUMBER = 3;
    private static final class EachMoneyDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  com.code.server.constant.data.StaticDataProto.internal_static_Room_EachMoneyEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> eachMoney_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetEachMoney() {
      if (eachMoney_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            EachMoneyDefaultEntryHolder.defaultEntry);
      }
      return eachMoney_;
    }

    public int getEachMoneyCount() {
      return internalGetEachMoney().getMap().size();
    }
    /**
     * <code>map&lt;int32, int32&gt; eachMoney = 3;</code>
     */

    public boolean containsEachMoney(
        int key) {
      
      return internalGetEachMoney().getMap().containsKey(key);
    }
    /**
     * Use {@link #getEachMoneyMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getEachMoney() {
      return getEachMoneyMap();
    }
    /**
     * <code>map&lt;int32, int32&gt; eachMoney = 3;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.Integer> getEachMoneyMap() {
      return internalGetEachMoney().getMap();
    }
    /**
     * <code>map&lt;int32, int32&gt; eachMoney = 3;</code>
     */

    public int getEachMoneyOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetEachMoney().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, int32&gt; eachMoney = 3;</code>
     */

    public int getEachMoneyOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetEachMoney().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int ISADDGOLD_FIELD_NUMBER = 4;
    private int isAddGold_;
    /**
     * <code>int32 isAddGold = 4;</code>
     */
    public int getIsAddGold() {
      return isAddGold_;
    }

    public static final int DESC_FIELD_NUMBER = 5;
    private volatile java.lang.Object desc_;
    /**
     * <code>string desc = 5;</code>
     */
    public java.lang.String getDesc() {
      java.lang.Object ref = desc_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        desc_ = s;
        return s;
      }
    }
    /**
     * <code>string desc = 5;</code>
     */
    public com.google.protobuf.ByteString
        getDescBytes() {
      java.lang.Object ref = desc_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        desc_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetMoney(),
          MoneyDefaultEntryHolder.defaultEntry,
          2);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetEachMoney(),
          EachMoneyDefaultEntryHolder.defaultEntry,
          3);
      if (isAddGold_ != 0) {
        output.writeInt32(4, isAddGold_);
      }
      if (!getDescBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, desc_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetMoney().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        money__ = MoneyDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, money__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetEachMoney().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        eachMoney__ = EachMoneyDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, eachMoney__);
      }
      if (isAddGold_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, isAddGold_);
      }
      if (!getDescBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, desc_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.code.server.constant.data.StaticDataProto.Room)) {
        return super.equals(obj);
      }
      com.code.server.constant.data.StaticDataProto.Room other = (com.code.server.constant.data.StaticDataProto.Room) obj;

      boolean result = true;
      result = result && getId()
          .equals(other.getId());
      result = result && internalGetMoney().equals(
          other.internalGetMoney());
      result = result && internalGetEachMoney().equals(
          other.internalGetEachMoney());
      result = result && (getIsAddGold()
          == other.getIsAddGold());
      result = result && getDesc()
          .equals(other.getDesc());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      if (!internalGetMoney().getMap().isEmpty()) {
        hash = (37 * hash) + MONEY_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMoney().hashCode();
      }
      if (!internalGetEachMoney().getMap().isEmpty()) {
        hash = (37 * hash) + EACHMONEY_FIELD_NUMBER;
        hash = (53 * hash) + internalGetEachMoney().hashCode();
      }
      hash = (37 * hash) + ISADDGOLD_FIELD_NUMBER;
      hash = (53 * hash) + getIsAddGold();
      hash = (37 * hash) + DESC_FIELD_NUMBER;
      hash = (53 * hash) + getDesc().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.code.server.constant.data.StaticDataProto.Room parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.code.server.constant.data.StaticDataProto.Room parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.code.server.constant.data.StaticDataProto.Room parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.code.server.constant.data.StaticDataProto.Room parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.code.server.constant.data.StaticDataProto.Room parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.code.server.constant.data.StaticDataProto.Room parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.code.server.constant.data.StaticDataProto.Room parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.code.server.constant.data.StaticDataProto.Room parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.code.server.constant.data.StaticDataProto.Room parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.code.server.constant.data.StaticDataProto.Room parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.code.server.constant.data.StaticDataProto.Room prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Room}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Room)
        com.code.server.constant.data.StaticDataProto.RoomOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.code.server.constant.data.StaticDataProto.internal_static_Room_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 2:
            return internalGetMoney();
          case 3:
            return internalGetEachMoney();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 2:
            return internalGetMutableMoney();
          case 3:
            return internalGetMutableEachMoney();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.code.server.constant.data.StaticDataProto.internal_static_Room_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.code.server.constant.data.StaticDataProto.Room.class, com.code.server.constant.data.StaticDataProto.Room.Builder.class);
      }

      // Construct using com.code.server.constant.data.StaticDataProto.Room.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        id_ = "";

        internalGetMutableMoney().clear();
        internalGetMutableEachMoney().clear();
        isAddGold_ = 0;

        desc_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.code.server.constant.data.StaticDataProto.internal_static_Room_descriptor;
      }

      public com.code.server.constant.data.StaticDataProto.Room getDefaultInstanceForType() {
        return com.code.server.constant.data.StaticDataProto.Room.getDefaultInstance();
      }

      public com.code.server.constant.data.StaticDataProto.Room build() {
        com.code.server.constant.data.StaticDataProto.Room result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.code.server.constant.data.StaticDataProto.Room buildPartial() {
        com.code.server.constant.data.StaticDataProto.Room result = new com.code.server.constant.data.StaticDataProto.Room(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.id_ = id_;
        result.money_ = internalGetMoney();
        result.money_.makeImmutable();
        result.eachMoney_ = internalGetEachMoney();
        result.eachMoney_.makeImmutable();
        result.isAddGold_ = isAddGold_;
        result.desc_ = desc_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.code.server.constant.data.StaticDataProto.Room) {
          return mergeFrom((com.code.server.constant.data.StaticDataProto.Room)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.code.server.constant.data.StaticDataProto.Room other) {
        if (other == com.code.server.constant.data.StaticDataProto.Room.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        internalGetMutableMoney().mergeFrom(
            other.internalGetMoney());
        internalGetMutableEachMoney().mergeFrom(
            other.internalGetEachMoney());
        if (other.getIsAddGold() != 0) {
          setIsAddGold(other.getIsAddGold());
        }
        if (!other.getDesc().isEmpty()) {
          desc_ = other.desc_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.code.server.constant.data.StaticDataProto.Room parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.code.server.constant.data.StaticDataProto.Room) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object id_ = "";
      /**
       * <code>string id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string id = 1;</code>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <code>string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> money_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMoney() {
        if (money_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MoneyDefaultEntryHolder.defaultEntry);
        }
        return money_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableMoney() {
        onChanged();;
        if (money_ == null) {
          money_ = com.google.protobuf.MapField.newMapField(
              MoneyDefaultEntryHolder.defaultEntry);
        }
        if (!money_.isMutable()) {
          money_ = money_.copy();
        }
        return money_;
      }

      public int getMoneyCount() {
        return internalGetMoney().getMap().size();
      }
      /**
       * <code>map&lt;int32, int32&gt; money = 2;</code>
       */

      public boolean containsMoney(
          int key) {
        
        return internalGetMoney().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMoneyMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getMoney() {
        return getMoneyMap();
      }
      /**
       * <code>map&lt;int32, int32&gt; money = 2;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.Integer> getMoneyMap() {
        return internalGetMoney().getMap();
      }
      /**
       * <code>map&lt;int32, int32&gt; money = 2;</code>
       */

      public int getMoneyOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetMoney().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, int32&gt; money = 2;</code>
       */

      public int getMoneyOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetMoney().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMoney() {
        internalGetMutableMoney().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, int32&gt; money = 2;</code>
       */

      public Builder removeMoney(
          int key) {
        
        internalGetMutableMoney().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableMoney() {
        return internalGetMutableMoney().getMutableMap();
      }
      /**
       * <code>map&lt;int32, int32&gt; money = 2;</code>
       */
      public Builder putMoney(
          int key,
          int value) {
        
        
        internalGetMutableMoney().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, int32&gt; money = 2;</code>
       */

      public Builder putAllMoney(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableMoney().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> eachMoney_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetEachMoney() {
        if (eachMoney_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              EachMoneyDefaultEntryHolder.defaultEntry);
        }
        return eachMoney_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableEachMoney() {
        onChanged();;
        if (eachMoney_ == null) {
          eachMoney_ = com.google.protobuf.MapField.newMapField(
              EachMoneyDefaultEntryHolder.defaultEntry);
        }
        if (!eachMoney_.isMutable()) {
          eachMoney_ = eachMoney_.copy();
        }
        return eachMoney_;
      }

      public int getEachMoneyCount() {
        return internalGetEachMoney().getMap().size();
      }
      /**
       * <code>map&lt;int32, int32&gt; eachMoney = 3;</code>
       */

      public boolean containsEachMoney(
          int key) {
        
        return internalGetEachMoney().getMap().containsKey(key);
      }
      /**
       * Use {@link #getEachMoneyMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getEachMoney() {
        return getEachMoneyMap();
      }
      /**
       * <code>map&lt;int32, int32&gt; eachMoney = 3;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.Integer> getEachMoneyMap() {
        return internalGetEachMoney().getMap();
      }
      /**
       * <code>map&lt;int32, int32&gt; eachMoney = 3;</code>
       */

      public int getEachMoneyOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetEachMoney().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, int32&gt; eachMoney = 3;</code>
       */

      public int getEachMoneyOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetEachMoney().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearEachMoney() {
        internalGetMutableEachMoney().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, int32&gt; eachMoney = 3;</code>
       */

      public Builder removeEachMoney(
          int key) {
        
        internalGetMutableEachMoney().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableEachMoney() {
        return internalGetMutableEachMoney().getMutableMap();
      }
      /**
       * <code>map&lt;int32, int32&gt; eachMoney = 3;</code>
       */
      public Builder putEachMoney(
          int key,
          int value) {
        
        
        internalGetMutableEachMoney().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, int32&gt; eachMoney = 3;</code>
       */

      public Builder putAllEachMoney(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableEachMoney().getMutableMap()
            .putAll(values);
        return this;
      }

      private int isAddGold_ ;
      /**
       * <code>int32 isAddGold = 4;</code>
       */
      public int getIsAddGold() {
        return isAddGold_;
      }
      /**
       * <code>int32 isAddGold = 4;</code>
       */
      public Builder setIsAddGold(int value) {
        
        isAddGold_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 isAddGold = 4;</code>
       */
      public Builder clearIsAddGold() {
        
        isAddGold_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object desc_ = "";
      /**
       * <code>string desc = 5;</code>
       */
      public java.lang.String getDesc() {
        java.lang.Object ref = desc_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          desc_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string desc = 5;</code>
       */
      public com.google.protobuf.ByteString
          getDescBytes() {
        java.lang.Object ref = desc_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          desc_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string desc = 5;</code>
       */
      public Builder setDesc(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        desc_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string desc = 5;</code>
       */
      public Builder clearDesc() {
        
        desc_ = getDefaultInstance().getDesc();
        onChanged();
        return this;
      }
      /**
       * <code>string desc = 5;</code>
       */
      public Builder setDescBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        desc_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:Room)
    }

    // @@protoc_insertion_point(class_scope:Room)
    private static final com.code.server.constant.data.StaticDataProto.Room DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.code.server.constant.data.StaticDataProto.Room();
    }

    public static com.code.server.constant.data.StaticDataProto.Room getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Room>
        PARSER = new com.google.protobuf.AbstractParser<Room>() {
      public Room parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Room(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Room> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Room> getParserForType() {
      return PARSER;
    }

    public com.code.server.constant.data.StaticDataProto.Room getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_DataManager_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_DataManager_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_DataManager_RoomRecordEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_DataManager_RoomRecordEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Room_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Room_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Room_MoneyEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Room_MoneyEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Room_EachMoneyEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Room_EachMoneyEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\027static_data_proto.proto\"z\n\013DataManager" +
      "\0221\n\013Room_record\030\001 \003(\0132\034.DataManager.Room" +
      "RecordEntry\0328\n\017RoomRecordEntry\022\013\n\003key\030\001 " +
      "\001(\005\022\024\n\005value\030\002 \001(\0132\005.Room:\0028\001\"\335\001\n\004Room\022\n" +
      "\n\002id\030\001 \001(\t\022\037\n\005money\030\002 \003(\0132\020.Room.MoneyEn" +
      "try\022\'\n\teachMoney\030\003 \003(\0132\024.Room.EachMoneyE" +
      "ntry\022\021\n\tisAddGold\030\004 \001(\005\022\014\n\004desc\030\005 \001(\t\032,\n" +
      "\nMoneyEntry\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030\002 \001(\005:" +
      "\0028\001\0320\n\016EachMoneyEntry\022\013\n\003key\030\001 \001(\005\022\r\n\005va" +
      "lue\030\002 \001(\005:\0028\001B0\n\035com.code.server.constan",
      "t.dataB\017StaticDataProtob\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_DataManager_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_DataManager_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_DataManager_descriptor,
        new java.lang.String[] { "RoomRecord", });
    internal_static_DataManager_RoomRecordEntry_descriptor =
      internal_static_DataManager_descriptor.getNestedTypes().get(0);
    internal_static_DataManager_RoomRecordEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_DataManager_RoomRecordEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_Room_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_Room_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Room_descriptor,
        new java.lang.String[] { "Id", "Money", "EachMoney", "IsAddGold", "Desc", });
    internal_static_Room_MoneyEntry_descriptor =
      internal_static_Room_descriptor.getNestedTypes().get(0);
    internal_static_Room_MoneyEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Room_MoneyEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_Room_EachMoneyEntry_descriptor =
      internal_static_Room_descriptor.getNestedTypes().get(1);
    internal_static_Room_EachMoneyEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Room_EachMoneyEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
